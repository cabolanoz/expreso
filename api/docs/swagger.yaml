basePath: /api/v1
definitions:
  models.Car:
    properties:
      color:
        type: string
      make:
        type: string
      pattern:
        description: e.g. "Toyota" - This is replacement for "model"
        type: string
      plate:
        type: string
      seats:
        type: integer
      user_id:
        type: integer
      year:
        type: integer
    type: object
  models.User:
    properties:
      cars:
        items:
          $ref: '#/definitions/models.Car'
        type: array
      email:
        type: string
      name:
        type: string
      profile_photo:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the backend API for Expreso.
  title: Expreso API
  version: "1.0"
paths:
  /users:
    get:
      description: List all registered users with their cars
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/models.User'
              type: array
            type: object
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              $ref: '#/definitions/models.User'
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      description: Get user details by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/models.User'
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by ID
      tags:
      - users
    put:
      description: Update a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
      tags:
      - users
  /users/{id}/cars:
    post:
      consumes:
      - application/json
      description: Register a new car for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Car data
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/models.Car'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              $ref: '#/definitions/models.Car'
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new car for a user
      tags:
      - users
  /users/{id}/cars/{car_id}:
    delete:
      description: Delete a car for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Car ID
        in: path
        name: car_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a car for a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a car for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Car ID
        in: path
        name: car_id
        required: true
        type: integer
      - description: Car data
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/models.Car'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/models.Car'
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a car for a user
      tags:
      - users
swagger: "2.0"
